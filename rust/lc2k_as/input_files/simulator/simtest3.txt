        lw   0 7 endadd   // reg7 = address of end
        lw   0 5 num32    // reg5 = 32
        lw   0 6 arradd   // reg6 = address of arr
        lw   6 1 0         // reg1 = 4
        lw   6 2 1         // reg2 = 1
        lw   6 3 2         // reg3 = 100
        lw   0 4 addadd // reg4 = address of addem
addem   add  1 1 1         // reg1 = 8
        sw   0 1 arradd
        nor  2 2 2         // reg2 = -2
        nor  3 3 3
        nor  3 3 3         // reg3 = 100
        beq  1 5 end 
        jalr 4 2
end     halt
endadd .fill end
arradd .fill arr
arr     .fill 4
        .fill 1
        .fill 100
num32  .fill 32
addadd .fill addem
